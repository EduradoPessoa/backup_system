#!/usr/bin/env python3
"""
Script simplificado para criar execut√°veis
PHOENYX TECNOLOGIA ¬© 2025
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def create_simple_executable():
    """Criar execut√°vel com comando simples do PyInstaller."""
    print("=" * 60)
    print("   DESKTOP BACKUP MANAGER - CRIADOR EXECUT√ÅVEL")
    print("              PHOENYX TECNOLOGIA ¬© 2025")
    print("=" * 60)
    
    # Verificar se PyInstaller est√° instalado
    try:
        import PyInstaller
        print(f"‚úì PyInstaller {PyInstaller.__version__} encontrado")
    except ImportError:
        print("‚ùå Instalando PyInstaller...")
        subprocess.run([sys.executable, "-m", "pip", "install", "pyinstaller"], check=True)
        print("‚úì PyInstaller instalado")
    
    # Criar diret√≥rio de sa√≠da
    output_dir = Path("executaveis")
    output_dir.mkdir(exist_ok=True)
    
    # Comando PyInstaller simplificado
    cmd = [
        sys.executable, "-m", "PyInstaller",
        "--onefile",              # Um √∫nico arquivo
        "--windowed",             # Sem console (GUI)
        "--add-data", "templates:templates",  # Incluir templates
        "--name", "DesktopBackupManager",
        "--distpath", str(output_dir),
        "main.py"
    ]
    
    print(f"üî® Executando PyInstaller...")
    print(f"Comando: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=300)
        
        if result.returncode == 0:
            print("‚úì Execut√°vel criado com sucesso!")
            
            # Listar arquivos criados
            exe_files = list(output_dir.glob("DesktopBackupManager*"))
            if exe_files:
                exe_file = exe_files[0]
                size_mb = exe_file.stat().st_size / (1024 * 1024)
                print(f"üì¶ Arquivo: {exe_file}")
                print(f"üìè Tamanho: {size_mb:.1f} MB")
                
                # Criar pacote de distribui√ß√£o
                create_distribution_package(exe_file)
                
                return True
            else:
                print("‚ùå Arquivo execut√°vel n√£o encontrado")
                return False
        else:
            print(f"‚ùå Erro no PyInstaller:")
            print(f"C√≥digo: {result.returncode}")
            print(f"Erro: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚ùå Timeout - PyInstaller demorou muito")
        return False
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def create_distribution_package(exe_file):
    """Criar pacote completo para distribui√ß√£o."""
    package_dir = exe_file.parent / "DesktopBackupManager_Distribuicao"
    package_dir.mkdir(exist_ok=True)
    
    # Copiar execut√°vel
    shutil.copy2(exe_file, package_dir)
    
    # Copiar arquivos auxiliares
    files_to_copy = [
        ("backup_cli.py", "Interface de linha de comando"),
        ("README.md", "Documenta√ß√£o"),
        ("GUIA_EXECUTAVEIS.md", "Guia de cria√ß√£o de execut√°veis"),
    ]
    
    for file_name, description in files_to_copy:
        if os.path.exists(file_name):
            shutil.copy2(file_name, package_dir)
            print(f"‚úì Inclu√≠do: {file_name}")
    
    # Criar arquivo LEIA-ME
    readme_content = f"""DESKTOP BACKUP MANAGER
PHOENYX TECNOLOGIA ¬© 2025

=== COMO USAR ===

1. INTERFACE GR√ÅFICA:
   Execute: DesktopBackupManager{'.exe' if sys.platform == 'win32' else ''}
   
2. LINHA DE COMANDO:
   Execute: python backup_cli.py --help

=== FUNCIONALIDADES ===

‚úì Backup de m√∫ltiplas pastas
‚úì Compress√£o ZIP e TAR.GZ  
‚úì Cat√°logo de backups
‚úì Restaura√ß√£o seletiva
‚úì Interface em portugu√™s
‚úì Tratamento de arquivos abertos
‚úì Automa√ß√£o via linha de comando

=== REQUISITOS ===

Este execut√°vel √© standalone - n√£o precisa do Python instalado.
Funciona em qualquer computador com o mesmo sistema operacional.

=== SUPORTE ===

PHOENYX TECNOLOGIA
Email: suporte@phoenyx.com.br
Site: www.phoenyx.com.br

Vers√£o: 1.0.0
Data: Janeiro 2025
"""
    
    readme_path = package_dir / "LEIA-ME.txt"
    with open(readme_path, 'w', encoding='utf-8') as f:
        f.write(readme_content)
    
    print(f"üì¶ Pacote criado: {package_dir}")
    print(f"üìã Instru√ß√µes: {readme_path}")

def main():
    """Fun√ß√£o principal."""
    success = create_simple_executable()
    
    if success:
        print("\n" + "=" * 60)
        print("üéâ EXECUT√ÅVEL CRIADO COM SUCESSO!")
        print("=" * 60)
        print("\nüìÅ Localiza√ß√£o: pasta 'executaveis/'")
        print("üì¶ Distribua a pasta 'DesktopBackupManager_Distribuicao'")
        print("\nüîÑ Para outros sistemas operacionais:")
        print("- Execute este script no sistema de destino")
        print("- Windows: python criar_executavel_simples.py")
        print("- Linux: python3 criar_executavel_simples.py") 
        print("- macOS: python3 criar_executavel_simples.py")
    else:
        print("\n‚ùå Falha na cria√ß√£o do execut√°vel")
        print("Tente executar manualmente:")
        print("pip install pyinstaller")
        print("pyinstaller --onefile --windowed main.py")

if __name__ == "__main__":
    main()